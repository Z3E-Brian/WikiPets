input FeedingScheduleInput{
    id: ID
    ageGroup: String!
    feedingTimes: String!
}
extend type Query {
    getFeedingSchedules(page: Int!, size: Int!): FeedingScheduleResponse
    getFeedingScheduleById(id: ID!): FeedingScheduleResponse
    getAllFeedingSchedules: [FeedingScheduleDto]
}
extend type Mutation{
    createFeedingSchedule(input:FeedingScheduleInput): CareTipDto
    updateFeedingSchedule(input:FeedingScheduleInput): CareTipDto
    deleteFeedingSchedule(id: ID!): Boolean
}
type FeedingScheduleDto{
    id: ID
    title: String
    ageGroup: String
    feedingTimes: String
    createdDate: LocalDate
    modifiedDate: LocalDate
    dogBreedDto: DogBreedDto
    catBreedDto: CatBreedDto
}
type FeedingScheduleResponse {
    feedingSchedules: [FeedingScheduleDto]
    totalPages: Int
    totalElements: Int
}